apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          command:
            - /opt/keycloak/bin/kc.sh
          args:
            - start
            - --http-enabled=true
            - --hostname-strict=false
            - --cache=local
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin
                  key: password
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: "{{ if .Values.cloudsql.enabled }}127.0.0.1{{ else }}{{ .Values.database.host }}{{ end }}"
            - name: KC_DB_URL_DATABASE
              value: "{{ .Values.database.name }}"
            - name: KC_DB_USERNAME
              value: "{{ .Values.database.user }}"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db
                  key: password
            - name: KC_DB_URL_PROPERTIES
              value: '{{ default "" .Values.database.parameters }}'
            # Use proxy headers instead of deprecated KC_PROXY flag (edge equivalent)
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_RELATIVE_PATH
              value: /
            - name: KC_HOSTNAME
              value: "{{ if .Values.ingress.enabled }}{{ .Values.ingress.host }}{{ end }}"
            - name: JAVA_OPTS_APPEND
              value: "-Xms256m -Xmx768m"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 12
          startupProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 20
            failureThreshold: 6
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: 1.5Gi
  # Cloud SQL proxy sidecar optional; removed when cloudsql.enabled=false

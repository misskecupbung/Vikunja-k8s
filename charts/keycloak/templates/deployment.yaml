apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccountName: default
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          command: ["/opt/keycloak/bin/kc.sh","start","--http-enabled=true","--hostname-strict=false","--proxy=edge","--cache=local","--health-enabled=true"]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin
                  key: password
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: "{{ if .Values.cloudsql.enabled }}127.0.0.1{{ else }}{{ .Values.database.host }}{{ end }}"
            - name: KC_DB_URL_DATABASE
              value: "{{ .Values.database.name }}"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              value: "{{ .Values.database.user }}"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db
                  key: password
            - name: KC_DB_URL_PROPERTIES
              value: '{{ default "" .Values.database.parameters }}'
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_RELATIVE_PATH
              value: /
            - name: KC_HOSTNAME
              value: "{{ if .Values.ingress.enabled }}{{ .Values.ingress.host }}{{ else if .Values.hostnameOverride }}{{ .Values.hostnameOverride }}{{ end }}"
            - name: JAVA_OPTS_APPEND
              value: "-Xms256m -Xmx768m"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 12
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 20
            failureThreshold: 6
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: 1.5Gi
        - name: cloud-sql-proxy
          image: "{{ .Values.cloudsql.image }}"
          command:
            - /cloud_sql_proxy
            - -instances={{ .Values.cloudsql.instanceConnectionName }}=tcp:5432
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          resources:
            requests:
              cpu: 20m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vikunja.fullname" . }}
  labels:
    app: {{ include "vikunja.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: {{ include "vikunja.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "vikunja.name" . }}
    spec:
      containers:
        - name: api
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: VIKUNJA_DATABASE_HOST
              value: {{ .Values.postgres.host | quote }}
            - name: VIKUNJA_DATABASE_USER
              value: {{ .Values.postgres.user | quote }}
            - name: VIKUNJA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vikunja.fullname" . }}-secret
                  key: DB_PASSWORD
            - name: VIKUNJA_DATABASE_DATABASE
              value: {{ .Values.postgres.database | quote }}
            - name: VIKUNJA_SERVICE_PUBLICURL
              value: "https://{{ .Values.ingress.host }}"
          ports:
            - containerPort: 3456
              name: http
          livenessProbe:
            httpGet:
              path: /api/v1/info
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /api/v1/info
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.37.0
          command:
            - /cloud_sql_proxy
            - -instances={{ .Values.cloudsql.instanceConnectionName }}=tcp:5432
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
        - name: frontend
          image: {{ .Values.frontend.image }}
          ports:
            - containerPort: 80
              name: web
          livenessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 20
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 10
      periodSeconds: 10
